services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: bot
    container_name: telegram_bot
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./bot:/bot
      - ./media:/app/media
      - ./admin_panel/media:/app/admin_panel/media
      - ./sessions:/app/sessions 
      - ./tmp:/tmp
      - ./logs:/app/logs
    environment:
      - MEDIA_ROOT=/app/media
      - SESSION_PATH=/app/sessions/userbot.session
    command: >
      bash -c "python watcher.py"




  db:
    image: postgres:15
    container_name: telegram_bot_db
    restart: always
    env_file:
      - .env
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  redis:
    image: redis:7
    container_name: telegram_bot_redis
    restart: always
    volumes:
      - ./data/redis_data:/data

  admin_panel:
    build:
      context: .
      dockerfile: Dockerfile
      target: admin_panel
    container_name: admin_panel
    restart: always
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "8000:8000"
    volumes:
      - ./admin_panel:/admin_panel
      - ./media:/app/media
      - ./staticfiles:/admin/staticfiles
    command: ["gunicorn", "core.wsgi:application", "--bind", "0.0.0.0:8000"]

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: bot
    container_name: celery_worker
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./sessions:/app/sessions
      - ./tmp:/tmp
      - ./admin_panel:/admin_panel
      - ./bot:/bot
      - ./logs:/app/logs
    command: >
      sh -c "cd / && 
      PYTHONPATH=/:/admin_panel 
      celery -A bot.celery_app worker --loglevel=info --pool=solo"
    environment:
      PYTHONPATH: /:/admin_panel
      SESSION_PATH: /app/sessions/userbot.session

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: bot
    container_name: celery_beat
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./admin_panel:/admin_panel
      - ./bot:/bot
    command: >
      sh -c "cd /bot &&
      PYTHONPATH=/:/admin_panel 
      celery -A bot.celery_app beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    environment:
      PYTHONPATH: /:/admin_panel

volumes:
  postgres_data:
  redis_data: