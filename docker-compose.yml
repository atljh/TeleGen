services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: bot
    container_name: telegram_bot
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - redis
    working_dir: /app
    volumes:
      - ./bot:/app/bot
      - ./admin_panel:/app/admin_panel
      - ./media:/app/media
      - ./sessions:/app/sessions
      - ./tmp:/tmp
      - ./logs:/app/logs
    environment:
      PYTHONPATH: /app
      DJANGO_SETTINGS_MODULE: admin_panel.core.settings.prod
      MEDIA_ROOT: /app/media
      SESSION_PATH: /app/sessions/userbot.session
      LOG_DIR: /app/logs
    command: python /app/bot/watcher.py

  admin_panel:
    build:
      context: .
      dockerfile: Dockerfile
      target: admin_panel
    container_name: admin_panel
    restart: always
    env_file:
      - .env
    depends_on:
      - db
    working_dir: /app
    ports:
      - "8000:8000"
    volumes:
      - ./admin_panel:/app/admin_panel
      - ./bot:/app/bot
      - ./media:/app/media
      - ./staticfiles:/app/staticfiles
    environment:
      PYTHONPATH: /app
      DJANGO_SETTINGS_MODULE: admin_panel.core.settings.prod
    command: gunicorn admin_panel.core.wsgi:application --bind 0.0.0.0:8000

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: bot
    container_name: celery_worker
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - redis
    working_dir: /app
    volumes:
      - ./bot:/app/bot
      - ./admin_panel:/app/admin_panel
      - ./sessions:/app/sessions
      - ./tmp:/tmp
      - ./logs:/app/logs
    environment:
      PYTHONPATH: /app
      DJANGO_SETTINGS_MODULE: admin_panel.core.settings.prod
      SESSION_PATH: /app/sessions/userbot.session
    command: celery -A bot.celery_app worker --loglevel=info --pool=solo

  db:
    image: postgres:15
    container_name: telegram_bot_db
    restart: always
    env_file:
      - .env
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  redis:
    image: redis:7
    container_name: telegram_bot_redis
    restart: always
    volumes:
      - ./data/redis_data:/data

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: bot
    container_name: celery_beat
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - redis
    working_dir: /app
    volumes:
      - ./bot:/app/bot
      - ./admin_panel:/app/admin_panel
      - ./logs:/app/logs
    environment:
      PYTHONPATH: /app
      DJANGO_SETTINGS_MODULE: admin_panel.core.settings.prod
    command: celery -A bot.celery_app beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
