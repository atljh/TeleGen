services:
  bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: bot
    container_name: telegram_bot
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./bot:/bot
    command: ["python", "main.py"]

  db:
    image: postgres:15
    container_name: telegram_bot_db
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  redis:
    image: redis:7
    container_name: telegram_bot_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data

  admin_panel:
    build:
      context: .
      dockerfile: Dockerfile
      target: admin_panel
    container_name: admin_panel
    restart: always
    env_file:
      - .env
    depends_on:
      - db
    ports:
      - "8000:8000"
    volumes:
      - ./admin_panel:/admin_panel
      - ./staticfiles:/admin/staticfiles
    command: ["gunicorn", "core.wsgi:application", "--bind", "0.0.0.0:8000"]

volumes:
  postgres_data:
  redis_data: