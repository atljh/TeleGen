import logging
import datetime
from aiogram import Bot
from aiogram.enums import ParseMode
from aiogram.types import CallbackQuery
from aiogram_dialog.widgets.kbd import Button, Row, Back
from aiogram_dialog import DialogManager, StartMode

from dialogs.main.states import MainMenu 
from bot.containers import Container

logger = logging.getLogger(__name__)


async def publish_now(callback: CallbackQuery, button: Button, manager: DialogManager):
    try:
        bot: Bot = manager.middleware_data["bot"]
        channel_service = Container.channel_service()
        
        selected_channel = manager.dialog_data.get("selected_channel")
        if not selected_channel:
            await callback.answer("–ö–∞–Ω–∞–ª –Ω–µ –≤–∏–±—Ä–∞–Ω–æ!")
            return
        
        test_post = (
            "üì¢ <b>–¢–µ—Å—Ç–æ–≤–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—è</b>\n\n"
            "–¶–µ —Ç–µ—Å—Ç–æ–≤–∏–π –ø–æ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É.\n\n"
            "üïí –ß–∞—Å –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó: " + datetime.now().strftime("%H:%M %d.%m.%Y")
        )
        
        await bot.send_message(
            chat_id=selected_channel.channel_id,
            text=test_post,
            parse_mode=ParseMode.HTML
        )
        
        await channel_service.log_publication(
            user_id=callback.from_user.id,
            channel_id=selected_channel.id,
            content=test_post
        )
        
        await callback.answer("‚úÖ –¢–µ—Å—Ç–æ–≤–∏–π –ø–æ—Å—Ç —É—Å–ø—ñ—à–Ω–æ –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ!")
        await callback.message.answer(f"üì¢ –¢–µ—Å—Ç–æ–≤–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –∫–∞–Ω–∞–ª {selected_channel.name}")
        
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó: {e}")
        await callback.answer("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó!")

async def schedule_publish(callback: CallbackQuery, button: Button, manager: DialogManager):
    await callback.message.answer("üìÖ –ü—É–±–ª—ñ–∫–∞—Ü—ñ—é –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ!")

async def edit_post(callback: CallbackQuery, button: Button, manager: DialogManager):
    await callback.message.answer("‚úèÔ∏è –í—ñ–¥–∫—Ä–∏—Ç–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó!")

async def delete_draft(callback: CallbackQuery, button: Button, manager: DialogManager):
    await callback.message.answer("üóë –ß–µ—Ä–Ω–µ—Ç–∫—É –≤–∏–¥–∞–ª–µ–Ω–æ!")

async def go_back_to_main(callback: CallbackQuery, button: Button, manager: DialogManager):
    await manager.start(MainMenu.main, mode=StartMode.RESET_STACK)
