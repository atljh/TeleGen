import logging
from aiogram.enums import ParseMode
from aiogram_dialog import Dialog, DialogManager, Window
from aiogram_dialog.widgets.kbd import Button, Row, Back, Url
from aiogram_dialog.widgets.text import Const, Format, Jinja
from aiogram_dialog.widgets.input import MessageInput

from bot.containers import Container
from bot.dialogs.generation.add_channel.states import AddChannelMenu
from .getters import channel_data_getter
from .callbacks import check_admin_rights, subscribe, on_create_flow
from utils.buttons import go_back_to_generation


async def channel_success_getter(dialog_manager: DialogManager, **kwargs):
    channel_id = dialog_manager.start_data.get("channel_id")
    channel_service = Container.channel_service()
    channel = await channel_service.get_channel_by_telegram_id(channel_id)
    dialog_manager.dialog_data["selected_channel"] = channel
    return {
        "channel_id": channel_id,
        "channel_name": dialog_manager.start_data.get("channel_name"),
        "channel_username": dialog_manager.start_data.get("channel_username"),
    }


def create_add_channel_dialog():
    return Dialog(
        Window(
            Format(
                "üìù *–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è –∑ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –±–æ—Ç–∞ –¥–æ –∫–∞–Ω–∞–ª—É*\n\n"
                "> –î–æ–¥–∞–π—Ç–µ –∫–∞–Ω–∞–ª, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µüëá\n\n",
                when=lambda data, widget, manager: not data.get("is_admin"),
            ),
            Format(
                "‚úÖ <b>–í–∏ –≤–∂–µ –¥–æ–¥–∞–ª–∏ –±–æ—Ç–∞ –¥–æ —Ü—å–æ–≥–æ –∫–∞–Ω–∞–ª—É!</b>\n\n"
                "<b>ID –∫–∞–Ω–∞–ª—É:</b> {channel_id}\n"
                "<b>–ù–∞–∑–≤–∞:</b> {channel_name}",
                when=lambda data, widget, manager: data.get("is_admin"),
            ),
            Row(
                Url(text=Const("üì≤ –î–æ–¥–∞—Ç–∏ –±–æ—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ"), url=Jinja("{{bot_url}}")),
            ),
            Row(
                Button(Const("üîô –ù–∞–∑–∞–¥"), id="go_back", on_click=go_back_to_generation),
            ),
            parse_mode=ParseMode.MARKDOWN_V2,
            state=AddChannelMenu.instructions,
            getter=channel_data_getter,
        ),
        Window(
            Format(
                "üéâ <b>–ö–∞–Ω–∞–ª {channel_name} —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–∏–π!</b>\n\n"
                "ID –∫–∞–Ω–∞–ª—É: {channel_id}\n"
                "–¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó.",
            ),
            Row(
                Button(
                    Const("‚ö° –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ–ª–æ—É"), id="create_flow", on_click=on_create_flow
                ),
                Button(Const("üíé –ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è"), id="subscribe", on_click=subscribe),
            ),
            Row(
                Button(Const("üîô –ù–∞–∑–∞–¥"), id="back", on_click=go_back_to_generation),
            ),
            parse_mode=ParseMode.HTML,
            state=AddChannelMenu.success,
            getter=channel_success_getter,
        ),
    )
