import logging
from aiogram import F
from aiogram.enums import ParseMode
from aiogram.types import CallbackQuery, Message
from aiogram_dialog import DialogManager, Window, Dialog
from aiogram_dialog.widgets.kbd import Button, Back, SwitchTo, Select
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Button, Column, Row, Select, ScrollingGroup
from aiogram_dialog.widgets.input import TextInput, MessageInput

from .getters import (
    character_limit_getter,
    flow_settings_getter,
    get_current_source,
    get_source_type,
    get_sources_data,
    posts_in_flow_getter,
)
from .states import FlowSettingsMenu
from .callbacks import (
    back_to_settings,
    character_limit,
    on_source_link_entered,
    on_source_selected_for_delete,
    on_source_selected_for_edit,
    set_frequency,
    set_generation_frequency,
    set_posts_in_flow,
    to_add_source,
    to_select_source_to_delete,
    to_select_source_to_edit,
    toggle_ad_block,
    toggle_title_highlight,
    configure_ad_block,
    open_flow_settings,
    open_main_settings,
    open_source_settings,
    set_character_limit,
    set_flow_volume
)

def create_flow_settings_window():
    return Window(
        Format(
        """
        <b>–ö–∞–Ω–∞–ª:</b> {channel_name}
                
        <b><u>–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ Flow</u></b>
        - <b>–¢–µ–º–∞—Ç–∏–∫–∞:</b> {theme}
        - <b>–î–∂–µ—Ä–µ–ª–∞ ({source_count}):</b>
            <b>{sources}</b>
        - <b>–ß–∞—Å—Ç–æ—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó:</b> {frequency}
        - <b>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–Ω–∞–∫—ñ–≤:</b> {words_limit}
        - <b>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤ —É —Ñ–ª–æ—É:</b> {flow_volume}
        - <b>–í–∏–¥—ñ–ª–µ–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫–∞:</b> {title_highlight}
        - <b>–ü—ñ–¥–ø–∏—Å –¥–æ –ø–æ—Å—Ç—ñ–≤:</b> {signature}
        """
        ),
        Column(
            Button(Const("‚è± –ß–∞—Å—Ç–æ—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó"), id="generation_frequency", on_click=set_generation_frequency),
            Button(Const("üî† –û–±–º–µ–∂–µ–Ω–Ω—è –ø–æ —Å–∏–º–≤–æ–ª–∞–º"), id="character_limit", on_click=character_limit),
            Button(
                Format("üìå –í–∏–¥—ñ–ª–µ–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫—É: {title_highlight}"), 
                id="title_highlight", 
                on_click=toggle_title_highlight
            ),
            Button(Const("üì¢ –†–µ–∫–ª–∞–º–Ω–∏–π –±–ª–æ–∫"), id="ad_block", on_click=configure_ad_block),
            Button(Const("üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤ —É —Ñ–ª–æ—É"), id="posts_in_flow", on_click=set_posts_in_flow),
            Button(Const("üìö –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–∂–µ—Ä–µ–ª"), id="source_settings", on_click=open_source_settings),
        ),
        Row(
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="open_main_settings", on_click=open_main_settings),
        ),
        state=FlowSettingsMenu.flow_settings,
        parse_mode=ParseMode.HTML,
        getter=flow_settings_getter
    )


def create_ad_block_settings_window():
    return Window(
        Const("üì¢ <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±–ª–æ–∫—É</b>"),
        Column(
            Button(
                Const("‚úÖ –í–∫–ª—é—á–∏—Ç–∏ —Ä–µ–∫–ª–∞–º—É"), 
                id="enable_ads",
                on_click=toggle_ad_block
            ),
            Button(
                Const("‚ùå –í–∏–º–∫–Ω—É—Ç–∏ —Ä–µ–∫–ª–∞–º—É"), 
                id="disable_ads",
                on_click=toggle_ad_block
            ),
        ),
        Row(
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings),
        ),
        state=FlowSettingsMenu.ad_block_settings,
        parse_mode=ParseMode.HTML
    )

def create_frequency_settings_window():
    return Window(
        Const("‚è± <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—Ç–æ—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó</b>\n\n"
             "–û–±–µ—Ä—ñ—Ç—å —è–∫ —á–∞—Å—Ç–æ –±–æ—Ç –±—É–¥–µ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø–æ—Å—Ç–∏:"),
        Column(
            Button(Const("–ö–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É"), id="freq_1h", on_click=set_frequency),
            Button(Const("–ö–æ–∂–Ω—ñ 12 –≥–æ–¥–∏–Ω"), id="freq_12h", on_click=set_frequency),
            Button(Const("–†–∞–∑ –Ω–∞ –¥–µ–Ω—å"), id="freq_24h", on_click=set_frequency),
        ),
        Row(
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings),
        ),
        state=FlowSettingsMenu.generation_frequency,
        parse_mode=ParseMode.HTML,
    )

def create_character_limit_window():
    return Window(
        Format(
            "üî† <b>–û–±–º–µ–∂–µ–Ω–Ω—è –ø–æ –∑–Ω–∞–∫–∞–º</b>\n\n"
            "–ü–æ—Ç–æ—á–Ω–∏–π –ª—ñ–º—ñ—Ç: {char_limit} –∑–Ω–∞–∫—ñ–≤\n\n"
            "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:"
        ),
        Column(
            Button(Const("–î–æ 100"), id="limit_100", on_click=set_character_limit),
            Button(Const("–î–æ 300"), id="limit_300", on_click=set_character_limit),
            Button(Const("–î–æ 1000"), id="limit_1000", on_click=set_character_limit),
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), 
                id="open_flow_settings", 
                on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.character_limit,
        parse_mode=ParseMode.HTML,
        getter=character_limit_getter
    )

def create_posts_in_flow_window():
    return Window(
        Format("üìä <b>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤ —É —Ñ–ª–æ—É</b>\n\n–ü–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è: {posts_count}"),
        Column(
            Button(Const("5"), id="volume_5", on_click=set_flow_volume),
            Button(Const("10"), id="volume_10", on_click=set_flow_volume),
            Button(Const("20"), id="volume_20", on_click=set_flow_volume),
        ),
        Row(
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings),        
        ),
        state=FlowSettingsMenu.posts_in_flow,
        parse_mode=ParseMode.HTML,
        getter=posts_in_flow_getter
    )
    
def create_sources_dialog():
    return Dialog(
        Window(
            Format(
                "<b>–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –¥–∂–µ—Ä–µ–ª–∞–º–∏</b>\n\n"
                "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–∂–µ—Ä–µ–ª: {count}\n\n"
                "{sources_list}"
            ),
            Column(
                Button(Const("‚ûï –î–æ–¥–∞—Ç–∏ –¥–∂–µ—Ä–µ–ª–æ"), id="add_source", on_click=to_add_source),
                Button(Const("‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –¥–∂–µ—Ä–µ–ª–æ"), id="edit_source", on_click=to_select_source_to_edit),
                Button(Const("üóë –í–∏–¥–∞–ª–∏—Ç–∏ –¥–∂–µ—Ä–µ–ª–æ"), id="delete_source", on_click=to_select_source_to_delete),
            ),
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="back_to_settings", on_click=back_to_settings),
            state=FlowSettingsMenu.source_settings,
            parse_mode=ParseMode.HTML,
            getter=get_sources_data
        ),
        
        Window(
            Const("–í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –¥–∂–µ—Ä–µ–ª–∞:"),
            Column(
                Button(Const("üì∑ Instagram"), id="source_instagram"),
                Button(Const("üåê –í–µ–±-—Å–∞–π—Ç"), id="source_web"),
                Button(Const("üì∫ YouTube"), id="source_youtube"),
            ),
            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
            state=FlowSettingsMenu.add_source,
        ),
        
        Window(
            Format("–í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è {source_type}:"),
            TextInput(
                id="source_link_input",
                on_success=on_source_link_entered
            ),
            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
            state=FlowSettingsMenu.add_source_link,
            getter=get_source_type
        ),
        
        Window(
            Const("–û–±–µ—Ä—ñ—Ç—å –¥–∂–µ—Ä–µ–ª–æ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è:"),
            ScrollingGroup(
                Select(
                    Format("{item[type]} - {item[link]}"),
                    id="sources_select",
                    item_id_getter=lambda item: item["id"],
                    items="sources",
                    on_click=on_source_selected_for_edit,
                ),
                width=1,
                height=5,
                id='edit_select'
            ),
            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
            state=FlowSettingsMenu.select_source_to_edit,
            getter=get_sources_data
        ),
        
        Window(
            Format("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–∂–µ—Ä–µ–ª–∞:\n{source[type]} - {source[link]}"),
            Column(
                Button(Const("‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è"), id="edit_link"),
                Button(Const("‚ôªÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ —Ç–∏–ø"), id="edit_type"),
            ),
            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
            state=FlowSettingsMenu.edit_source,
            getter=get_current_source
        ),
        
        Window(
            Const("–û–±–µ—Ä—ñ—Ç—å –¥–∂–µ—Ä–µ–ª–æ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:"),
            ScrollingGroup(
                Select(
                    Format("{item[type]} - {item[link]}"),
                    id="sources_select",
                    item_id_getter=lambda item: item["id"],
                    items="sources",
                    on_click=on_source_selected_for_delete,
                ),
                width=1,
                height=5,
                id='delete_select'
            ),
            Back(Const("‚óÄÔ∏è –ù–∞–∑–∞–¥")),
            state=FlowSettingsMenu.select_source_to_delete,
            getter=get_sources_data
        ),
    )

def create_flow_settings_dialog():
    return Dialog(
        create_flow_settings_window(),
        create_frequency_settings_window(),
        create_character_limit_window(),
        create_ad_block_settings_window(),
        create_posts_in_flow_window(),
    )