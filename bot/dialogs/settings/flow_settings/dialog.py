from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.input import TextInput
from aiogram_dialog.widgets.kbd import (
    Button,
    Column,
    Row,
    ScrollingGroup,
    Select,
)
from aiogram_dialog.widgets.link_preview import LinkPreview
from aiogram_dialog.widgets.text import Const, Format

from .callbacks import (
    cancel_delete_source,
    character_limit,
    confirm_delete_source,
    handle_custom_volume_input,
    input_custom_volume,
    on_new_type_selected,
    on_source_link_entered,
    on_source_new_link_entered,
    on_source_selected_for_delete,
    on_source_selected_for_edit,
    on_source_type_selected,
    open_flow_settings,
    open_main_settings,
    open_source_settings,
    set_character_limit,
    set_flow_volume,
    set_frequency,
    set_generation_frequency,
    set_posts_in_flow,
    to_add_source,
    to_edit_link,
    to_edit_type,
    to_select_source_to_delete,
    to_select_source_to_edit,
    toggle_ad_block,
    toggle_title_highlight,
)
from .getters import (
    character_limit_getter,
    flow_settings_getter,
    get_current_source,
    get_source_to_delete_data,
    get_source_type_data,
    get_sources_data,
    get_sources_list,
    posts_in_flow_getter,
)
from .states import FlowSettingsMenu


def create_flow_settings_window():
    return Window(
        Format(
            """
        <b>–ö–∞–Ω–∞–ª:</b> {channel_name}

        <b>–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ Flow</b>
        - <b>–¢–µ–º–∞—Ç–∏–∫–∞:</b> {theme}
        - <b>–î–∂–µ—Ä–µ–ª–∞ ({source_count}):</b>
            <b>{sources}</b>
        - <b>–ß–∞—Å—Ç–æ—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó:</b> {frequency}
        - <b>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–Ω–∞–∫—ñ–≤:</b> {words_limit}
        - <b>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤ —É —Ñ–ª–æ—É:</b> {flow_volume}
        - <b>–í–∏–¥—ñ–ª–µ–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫–∞:</b> {title_highlight}
        - <b>–ü—ñ–¥–ø–∏—Å –¥–æ –ø–æ—Å—Ç—ñ–≤:</b> {signature}
        """
        ),
        Column(
            Button(
                Const("‚è± –ß–∞—Å—Ç–æ—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó"),
                id="generation_frequency",
                on_click=set_generation_frequency,
            ),
            Button(
                Const("üî† –û–±–º–µ–∂–µ–Ω–Ω—è –ø–æ —Å–∏–º–≤–æ–ª–∞–º"),
                id="character_limit",
                on_click=character_limit,
            ),
            Button(
                Format("üìå –í–∏–¥—ñ–ª–µ–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫—É: {title_highlight}"),
                id="title_highlight",
                on_click=toggle_title_highlight,
            ),
            # Button(Const("üì¢ –†–µ–∫–ª–∞–º–Ω–∏–π –±–ª–æ–∫"), id="ad_block", on_click=configure_ad_block),
            Button(
                Const("üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤ —É —Ñ–ª–æ—É"),
                id="posts_in_flow",
                on_click=set_posts_in_flow,
            ),
            Button(
                Const("üìö –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–∂–µ—Ä–µ–ª"),
                id="source_settings",
                on_click=open_source_settings,
            ),
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_main_settings", on_click=open_main_settings
            ),
        ),
        LinkPreview(is_disabled=True),
        state=FlowSettingsMenu.flow_settings,
        parse_mode=ParseMode.HTML,
        getter=flow_settings_getter,
    )


def create_ad_block_settings_window():
    return Window(
        Const("üì¢ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±–ª–æ–∫—É</b>"),
        Column(
            Button(
                Const("‚úÖ –í–∫–ª—é—á–∏—Ç–∏ —Ä–µ–∫–ª–∞–º—É"), id="enable_ads", on_click=toggle_ad_block
            ),
            Button(
                Const("‚ùå –í–∏–º–∫–Ω—É—Ç–∏ —Ä–µ–∫–ª–∞–º—É"), id="disable_ads", on_click=toggle_ad_block
            ),
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.ad_block_settings,
        parse_mode=ParseMode.HTML,
    )


def create_frequency_settings_window():
    return Window(
        Const(
            "‚è± <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—Ç–æ—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó</b>\n\n"
            "–û–±–µ—Ä—ñ—Ç—å —è–∫ —á–∞—Å—Ç–æ –±–æ—Ç –±—É–¥–µ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø–æ—Å—Ç–∏:"
        ),
        Column(
            Button(Const("–ö–æ–∂–Ω—É –≥–æ–¥–∏–Ω—É"), id="freq_1h", on_click=set_frequency),
            Button(Const("–ö–æ–∂–Ω—ñ 12 –≥–æ–¥–∏–Ω"), id="freq_12h", on_click=set_frequency),
            Button(Const("–†–∞–∑ –Ω–∞ –¥–µ–Ω—å"), id="freq_24h", on_click=set_frequency),
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.generation_frequency,
        parse_mode=ParseMode.HTML,
    )


def create_character_limit_window():
    return Window(
        Format(
            "üî† <b>–û–±–º–µ–∂–µ–Ω–Ω—è –ø–æ –∑–Ω–∞–∫–∞–º</b>\n\n"
            "–ü–æ—Ç–æ—á–Ω–∏–π –ª—ñ–º—ñ—Ç: {char_limit} –∑–Ω–∞–∫—ñ–≤\n\n"
            "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:"
        ),
        Column(
            Button(Const("–î–æ 100"), id="limit_100", on_click=set_character_limit),
            Button(Const("–î–æ 300"), id="limit_300", on_click=set_character_limit),
            Button(Const("–î–æ 1000"), id="limit_1000", on_click=set_character_limit),
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.character_limit,
        parse_mode=ParseMode.HTML,
        getter=character_limit_getter,
    )


def create_posts_in_flow_window():
    return Window(
        Format(
            "üìä <b>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤ —É —Ñ–ª–æ—É</b>\n\n"
            "–ü–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è: <code>{posts_count}</code>\n\n"
            "–í–∏–±–µ—Ä–∏ –æ–¥–Ω–µ –∑ —Ç–∏–ø–æ–≤–∏—Ö –∑–Ω–∞—á–µ–Ω—å –∞–±–æ –≤–≤–µ–¥–∏ —Å–≤–æ—î:"
        ),
        Column(
            Button(Const("5"), id="volume_5", on_click=set_flow_volume),
            Button(Const("10"), id="volume_10", on_click=set_flow_volume),
            Button(Const("20"), id="volume_20", on_click=set_flow_volume),
            Button(
                Const("üî¢ –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É"),
                id="custom_volume_input",
                on_click=input_custom_volume,
            ),
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.posts_in_flow,
        parse_mode=ParseMode.HTML,
        getter=posts_in_flow_getter,
    )


def create_sources_dialog():
    return Window(
        Format(
            "<b>–£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –¥–∂–µ—Ä–µ–ª–∞–º–∏</b>\n\n"
            "–ö—ñ–ª—å–∫—ñ—Å—Ç—å –¥–∂–µ—Ä–µ–ª: {sources_count}\n\n"
            "{sources_list}"
        ),
        Column(
            Button(Const("‚ûï –î–æ–¥–∞—Ç–∏ –¥–∂–µ—Ä–µ–ª–æ"), id="add_source", on_click=to_add_source),
            Button(
                Const("‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –¥–∂–µ—Ä–µ–ª–æ"),
                id="edit_source",
                on_click=to_select_source_to_edit,
            ),
            Button(
                Const("üóë –í–∏–¥–∞–ª–∏—Ç–∏ –¥–∂–µ—Ä–µ–ª–æ"),
                id="delete_source",
                on_click=to_select_source_to_delete,
            ),
        ),
        Button(Const("üîô –ù–∞–∑–∞–¥"), id="back_to_settings", on_click=open_flow_settings),
        state=FlowSettingsMenu.source_settings,
        parse_mode=ParseMode.HTML,
        getter=get_sources_data,
    )


def create_custom_volume_window():
    return Window(
        Format(
            "üî¢ <b>–í–≤–µ–¥–∏ —Å–≤–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤ —É —Ñ–ª–æ—É</b>\n\n–í–∫–∞–∂–∏ —á–∏—Å–ª–æ –≤—ñ–¥ 1 –¥–æ 100:"
        ),
        TextInput(
            id="handle_custom_volume_input",
            on_success=handle_custom_volume_input,
            filter=volume_filter,
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"),
                id="back_to_flow_window",
                on_click=lambda c, b, m: m.switch_to(FlowSettingsMenu.posts_in_flow),
            ),
        ),
        state=FlowSettingsMenu.waiting_for_custom_volume,
        parse_mode=ParseMode.HTML,
    )


async def volume_filter(message: Message):
    text = message.text
    if not text.isdigit():
        await message.answer("‚ùó –ó–Ω–∞—á–µ–Ω–Ω—è –º–∞—î –±—É—Ç–∏ —á–∏—Å–ª–æ–º")
        return False
    return True


# =======================================ADD FLOW===========================================


async def link_filter(message: Message):
    text = message.text
    if not (text.startswith("http://") or text.startswith("https://")):
        await message.answer("‚ùó –ü–æ—Å–∏–ª–∞–Ω–Ω—è –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ http:// –∞–±–æ https://")
        return False
    return True


def create_select_source_type():
    return Window(
        Const("üìö –í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –¥–∂–µ—Ä–µ–ª–∞:"),
        Column(
            Button(
                Const("üì∑ Instagram"),
                id="source_instagram",
                on_click=on_source_type_selected,
            ),
            Button(
                Const("üåê –í–µ–±-—Å–∞–π—Ç"), id="source_web", on_click=on_source_type_selected
            ),
            Button(
                Const("‚úàÔ∏è Telegram"),
                id="source_telegram",
                on_click=on_source_type_selected,
            ),
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.add_source_type,
        parse_mode=ParseMode.HTML,
    )


def create_input_source_link():
    return Window(
        Format(
            "üîó –í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è {source_type}:\n\n"
            "–ü—Ä–∏–∫–ª–∞–¥: <code>{link_example}</code>"
        ),
        TextInput(
            id="source_link_input",
            on_success=on_source_link_entered,
            filter=link_filter,
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.add_source_link,
        parse_mode=ParseMode.HTML,
        getter=get_source_type_data,
    )


# =======================================EDIT FLOW===========================================


def create_select_edit_source():
    return Window(
        Const("‚úèÔ∏è –û–±–µ—Ä—ñ—Ç—å –¥–∂–µ—Ä–µ–ª–æ –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è:"),
        ScrollingGroup(
            Select(
                Format("{item[type]} - {item[link]}"),
                id="select_edit_source",
                item_id_getter=lambda item: item["idx"],
                items="sources",
                on_click=on_source_selected_for_edit,
            ),
            id="sources_scroll",
            width=1,
            height=5,
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.edit_select_source,
        parse_mode=ParseMode.HTML,
        getter=get_sources_list,
    )


def create_edit_source():
    return Window(
        Format("–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –¥–∂–µ—Ä–µ–ª–∞:\n–¢–∏–ø: {source_type}\n–ü–æ—Å–∏–ª–∞–Ω–Ω—è: {source_link}"),
        Column(
            Button(Const("‚úèÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è"), id="edit_link", on_click=to_edit_link),
            Button(Const("‚ôªÔ∏è –ó–º—ñ–Ω–∏—Ç–∏ —Ç–∏–ø"), id="edit_type", on_click=to_edit_type),
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.edit_source,
        getter=get_current_source,
    )


def create_edit_source_type():
    return Window(
        Const("üìö –í–∏–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –¥–∂–µ—Ä–µ–ª–∞:"),
        Column(
            Button(
                Const("üì∑ Instagram"),
                id="source_instagram",
                on_click=on_new_type_selected,
            ),
            Button(
                Const("üåê –í–µ–±-—Å–∞–π—Ç"), id="source_web", on_click=on_new_type_selected
            ),
            Button(
                Const("‚úàÔ∏è Telegram"),
                id="source_telegram",
                on_click=on_new_type_selected,
            ),
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.edit_source_type,
        parse_mode=ParseMode.HTML,
    )


def create_edit_source_link():
    return Window(
        Format(
            "üîó –í–≤–µ–¥—ñ—Ç—å –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è {source_type}:\n\n"
            "–ü—Ä–∏–∫–ª–∞–¥: <code>{link_example}</code>"
        ),
        TextInput(
            id="source_link_input",
            on_success=on_source_new_link_entered,
            filter=link_filter,
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.edit_source_link,
        parse_mode=ParseMode.HTML,
        getter=get_source_type_data,
    )


# =======================================DELETE FLOW===========================================


def create_select_delete_source():
    return Window(
        Const("–û–±–µ—Ä—ñ—Ç—å –¥–∂–µ—Ä–µ–ª–æ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:"),
        ScrollingGroup(
            Select(
                Format("{item[type]} - {item[link]}"),
                id="sources_select",
                item_id_getter=lambda item: item["id"],
                items="sources",
                on_click=on_source_selected_for_delete,
            ),
            width=1,
            height=5,
            id="delete_select",
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.select_source_to_delete,
        getter=get_sources_data,
    )


def create_confirm_delete_source():
    return Window(
        Format(
            "–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –¥–∂–µ—Ä–µ–ª–æ {source_to_delete[type]} - {source_to_delete[link]}?"
        ),
        Row(
            Button(
                Const("‚úÖ –¢–∞–∫"), id="confirm_delete", on_click=confirm_delete_source
            ),
            Button(Const("‚ùå –ù—ñ"), id="cancel_delete", on_click=cancel_delete_source),
        ),
        state=FlowSettingsMenu.confirm_delete_source,
        getter=get_source_to_delete_data,
    )


def create_flow_settings_dialog():
    return Dialog(
        create_flow_settings_window(),
        create_frequency_settings_window(),
        create_character_limit_window(),
        # create_ad_block_settings_window(),
        create_posts_in_flow_window(),
        create_custom_volume_window(),
        create_sources_dialog(),
        create_select_source_type(),
        create_input_source_link(),
        create_select_edit_source(),
        create_edit_source(),
        create_edit_source_type(),
        create_edit_source_link(),
        create_select_delete_source(),
        create_confirm_delete_source(),
    )
