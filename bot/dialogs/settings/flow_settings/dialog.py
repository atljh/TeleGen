from aiogram import F
from aiogram.enums import ParseMode
from aiogram.types import CallbackQuery, Message
from aiogram_dialog import DialogManager, Window, Dialog
from aiogram_dialog.widgets.kbd import Button, Back, SwitchTo, Select
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Button, Row, Back, Group, Select, Column, Next, SwitchTo
from aiogram_dialog.widgets.input import TextInput, MessageInput

from .states import FlowSettingsMenu
from .callbacks import (
    set_character_limit,
    set_exact_limit,
    set_exact_posts_count,
    set_frequency,
    set_generation_frequency,
    set_posts_in_flow,
    toggle_ad_block,
    toggle_title_highlight,
    configure_ad_block,
    open_flow_settings,
    open_main_settings,
    open_source_settings,
    handle_exact_posts_input,
    handle_exact_limit_input,
    adjust_character_limit,
    adjust_posts_count
)

def create_flow_settings_window():
    return Window(
        Format(
            "üîÑ <b>–ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –§–õ–û–£</b>\n\n"
            "üì¢ <b>–ö–∞–Ω–∞–ª: {channel_name}</b>\n\n"
        ),
        Column(
            Button(Const("‚è± –ß–∞—Å—Ç–æ—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó"), id="generation_frequency", on_click=set_generation_frequency),
            Button(Const("üî† –û–±–º–µ–∂–µ–Ω–Ω—è –ø–æ –∑–Ω–∞–∫–∞–º"), id="character_limit", on_click=set_character_limit),
            Button(
                Format("üìå –í–∏–¥—ñ–ª–µ–Ω–Ω—è –∑–∞–≥–æ–ª–æ–≤–∫—É: {highlight_status}"), 
                id="title_highlight", 
                on_click=toggle_title_highlight
            ),
            Button(Const("üì¢ –†–µ–∫–ª–∞–º–Ω–∏–π –±–ª–æ–∫"), id="ad_block", on_click=configure_ad_block),
            Button(Const("üìä –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤ —É —Ñ–ª–æ—É"), id="posts_in_flow", on_click=set_posts_in_flow),
            Button(Const("üìö –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–∂–µ—Ä–µ–ª"), id="source_settings", on_click=open_source_settings),
        ),
        Row(
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="open_main_settings", on_click=open_main_settings),
        ),
        state=FlowSettingsMenu.flow_settings,
        parse_mode=ParseMode.HTML,
        getter=flow_settings_getter
    )


async def flow_settings_getter(dialog_manager: DialogManager, **kwargs):
    selected_channel = (
        dialog_manager.start_data.get("selected_channel") 
        or dialog_manager.dialog_data.get("selected_channel")
    )
    
    if selected_channel:
        dialog_manager.dialog_data["selected_channel"] = selected_channel
    
    return {
        "channel_name": selected_channel.name,
        "highlight_status": "‚úÖ —É–≤—ñ–º–∫–Ω–µ–Ω–æ" if dialog_manager.dialog_data.get("title_highlight", False) else "‚ùå –≤–∏–º–∫–Ω–µ–Ω–æ"
    }

async def character_limit_getter(dialog_manager: DialogManager, **kwargs):
    return {
        "char_limit": dialog_manager.dialog_data.get("char_limit", 1000)
    }

def create_ad_block_settings_window():
    return Window(
        Const("üì¢ <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±–ª–æ–∫—É</b>"),
        Column(
            Button(
                Const("‚úÖ –í–∫–ª—é—á–∏—Ç–∏ —Ä–µ–∫–ª–∞–º—É"), 
                id="enable_ads",
                on_click=toggle_ad_block
            ),
            Button(
                Const("‚ùå –í–∏–º–∫–Ω—É—Ç–∏ —Ä–µ–∫–ª–∞–º—É"), 
                id="disable_ads",
                on_click=toggle_ad_block
            ),
        ),
        Row(
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings),
        ),
        state=FlowSettingsMenu.ad_block_settings,
        parse_mode=ParseMode.HTML
    )

def create_frequency_settings_window():
    return Window(
        Const("‚è± <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—Ç–æ—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó</b>\n\n"
             "–û–±–µ—Ä—ñ—Ç—å —è–∫ —á–∞—Å—Ç–æ –±–æ—Ç –±—É–¥–µ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø–æ—Å—Ç–∏:"),
        Column(
            Button(Const("üïí –ö–æ–∂–Ω—ñ 3 –≥–æ–¥–∏–Ω–∏"), id="freq_3h"),
            Button(Const("üïï –ö–æ–∂–Ω—ñ 6 –≥–æ–¥–∏–Ω"), id="freq_6h"),
            Button(Const("üïò –ö–æ–∂–Ω—ñ 12 –≥–æ–¥–∏–Ω"), id="freq_12h"),
            Button(Const("üåô –†–∞–∑ –Ω–∞ –¥–µ–Ω—å"), id="freq_24h"),
            Button(Const("‚úèÔ∏è –í–∫–∞–∑–∞—Ç–∏ –≤–ª–∞—Å–Ω–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª"), id="custom_freq"),
        ),
        Row(
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings),
        ),
        state=FlowSettingsMenu.generation_frequency,
        parse_mode=ParseMode.HTML,
    )

def create_exact_limit_input_window():
    return Window(
        Const("‚úèÔ∏è <b>–í–≤–µ–¥—ñ—Ç—å —Ç–æ—á–Ω–∏–π –ª—ñ–º—ñ—Ç —Å–∏–º–≤–æ–ª—ñ–≤</b>\n\n"
             "–î–æ–ø—É—Å—Ç–∏–º–∏–π –¥—ñ–∞–ø–∞–∑–æ–Ω: 100-10000\n\n"
             "–ê–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å '–ù–∞–∑–∞–¥' –¥–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è"),
        MessageInput(
            handle_exact_limit_input,
            filter=F.text,
        ),
        Row(
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings),
        ),
        state=FlowSettingsMenu.exact_limit_input,
        parse_mode=ParseMode.HTML
    )

def create_character_limit_window():
    return Window(
        Format(
            "üî† <b>–û–±–º–µ–∂–µ–Ω–Ω—è –ø–æ –∑–Ω–∞–∫–∞–º</b>\n\n"
            "–ü–æ—Ç–æ—á–Ω–∏–π –ª—ñ–º—ñ—Ç: {char_limit} –∑–Ω–∞–∫—ñ–≤\n\n"
            "–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:"
        ),
        Column(
            Button(
                Const("‚ûï –ó–±—ñ–ª—å—à–∏—Ç–∏"), 
                id="increase_limit", 
                on_click=adjust_character_limit
            ),
            Button(
                Const("‚ûñ –ó–º–µ–Ω—à–∏—Ç–∏"), 
                id="decrease_limit", 
                on_click=adjust_character_limit
            ),
            Button(
                Const("‚úèÔ∏è –í–∫–∞–∑–∞—Ç–∏ —Ç–æ—á–Ω–µ —á–∏—Å–ª–æ"), 
                id="set_exact_limit",
                on_click=set_exact_limit
            ),
            Button(
                Const("‚ôæ –í–∏–º–∫–Ω—É—Ç–∏ –æ–±–º–µ–∂–µ–Ω–Ω—è"), 
                id="disable_limit",
                on_click=adjust_character_limit
            ),
        ),
        Row(
            Button(
                Const("üîô –ù–∞–∑–∞–¥"), 
                id="open_flow_settings", 
                on_click=open_flow_settings
            ),
        ),
        state=FlowSettingsMenu.character_limit,
        parse_mode=ParseMode.HTML,
        getter=character_limit_getter
    )

async def posts_in_flow_getter(dialog_manager: DialogManager, **kwargs):
    return {
        "posts_count": dialog_manager.dialog_data.get("posts_count", 1)
    }

def create_posts_in_flow_window():
    return Window(
        Format("üìä <b>–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤ —É —Ñ–ª–æ—É</b>\n\n–ü–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è: {posts_count}"),
        Column(
            Button(Const("‚ûï –ó–±—ñ–ª—å—à–∏—Ç–∏"), id="increase_posts", on_click=adjust_posts_count),
            Button(Const("‚ûñ –ó–º–µ–Ω—à–∏—Ç–∏"), id="decrease_posts", on_click=adjust_posts_count),
            Button(Const("‚úèÔ∏è –í–∫–∞–∑–∞—Ç–∏ —Ç–æ—á–Ω–µ —á–∏—Å–ª–æ"), id="set_exact_posts", on_click=set_exact_posts_count),
        ),
        Row(
            Button(Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings),        
        ),
        state=FlowSettingsMenu.posts_in_flow,
        parse_mode=ParseMode.HTML,
        getter=posts_in_flow_getter
    )

def create_exact_posts_input_window():
    return Window(
        Const("‚úèÔ∏è <b>–í–≤–µ–¥—ñ—Ç—å –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Å—Ç—ñ–≤</b>\n(1-10)"),
        MessageInput(
            handle_exact_posts_input,
            filter=F.text & ~F.text.startswith('/')
        ),
        Button(Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings),
        state=FlowSettingsMenu.exact_posts_input,
        parse_mode=ParseMode.HTML
    )

    
def create_source_settings_window():
    return Window(
        Const("üìö <b>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–∂–µ—Ä–µ–ª</b>"),
        Column(
            Button(Const("‚ûï –î–æ–¥–∞—Ç–∏ –¥–∂–µ—Ä–µ–ª–æ"), id="add_source"),
            Button(Const("‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –¥–∂–µ—Ä–µ–ª–∞"), id="edit_sources"),
            Button(Const("üóë –í–∏–¥–∞–ª–∏—Ç–∏ –¥–∂–µ—Ä–µ–ª–æ"), id="delete_source"),
        ),
        Button(Const("üîô –ù–∞–∑–∞–¥"), id="open_flow_settings", on_click=open_flow_settings),    
        state=FlowSettingsMenu.source_settings,
        parse_mode=ParseMode.HTML
    )

def create_flow_settings_dialog():
    return Dialog(
        create_flow_settings_window(),
        create_frequency_settings_window(),
        create_character_limit_window(),
        create_exact_limit_input_window(),
        create_ad_block_settings_window(),
        create_posts_in_flow_window(),
        create_source_settings_window(),
        create_exact_posts_input_window()
    )