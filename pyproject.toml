# pyproject.toml
[project]
name = "telegen"
version = "0.1.0"
description = "Content Generation Bot Platform"
requires-python = ">=3.11"
dependencies = [
    # Core
    "Django==5.1.7",
    "asgiref==3.8.1",
    "sqlparse==0.5.3",
    "whitenoise==6.9.0",
    # Database
    "psycopg==3.2.9",
    "redis==5.2.1",
    # Async
    "aiohttp==3.10.11 ",
    "aiofiles==24.1.0",
    "aiosignal==1.3.2",
    # Telegram
    "aiogram==3.19.0",
    "aiogram_dialog==2.3.1",
    "telethon",
    # API & HTTP
    "httpx==0.28.1",
    "requests==2.32.3",
    # Data validation
    "pydantic==2.10.6",
    # Utilities
    "python-dotenv==1.0.1",
    "cachetools==5.5.2",
    # Content processing
    "Pillow==10.4.0",
    "langdetect",
    "feedparser",
    # Web scraping
    "beautifulsoup4==4.13.4",
    "cloudscraper==1.2.71",
    # Celery
    "celery",
    "django-celery-beat",
    # Dependency injection
    "dependency-injector==4.46.0",
    "openai>=1.101.0",
    "watchdog>=4.0.0",
    "pytz>=2025.2",
    "gunicorn>=23.0.0",
    "faker>=37.0.0",
    "black>=24.1.0",
    "ruff>=0.12.12",
    "flake8==7.0.0",
    "isort==5.13.2",
    "undetected-chromedriver>=3.5.5",
    "setuptools>=80.9.0",
    "pre-commit>=4.3.0",
    "pytest>=8.1.1",
    "pydantic-settings>=2.10.1",
]

[project.optional-dependencies]
dev = [
    "flake8-django>=1.1.1",
    "mypy>=1.9.0",
    "django-stubs>=5.2.5",
    "types-requests>=2.32.4.20250913",
    "types-python-dateutil>=2.9.0.20250822",
    "pytest==8.1.1",
    "pytest-django>=4.8.0",
    "black==24.1.0",
    "flake8==7.0.0",
    "isort==5.13.2",
    "mypy==1.9.0",
    "pytest-asyncio==0.23.5",
    "pytest-django==4.8.0",
    "pytest-cov>=6.3.0",
    "ipython==8.22.2",
    "django-debug-toolbar==4.3.0",
    "django-extensions==3.2.3",
    "watchdog==4.0.0",
    "Faker==37.0.0",
]

prod = [
    "gunicorn==23.0.0",
    "sentry-sdk==1.40.0",
    "uvicorn[standard]==0.29.0",
    "uvloop==0.19.0",
]

scraping = [
    "selenium-wire",
    "undetected-chromedriver",
]

docs = [
    "mkdocs==1.5.3",
    "mkdocs-material==9.5.3",
]


[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "DJ",  # django
    "RUF", # ruff-specific
]
exclude = [
    "migrations/",
    "**/migrations/",
    "**/migrations/*.py",
    "**/migrations/__init__.py",
]

ignore = [
    "E501",  # line too long (handled by formatter)
    "D107",  # Missing docstring in __init__
    "RUF001",
]

extend-select = ["DJ"]

[tool.ruff.lint.isort]
known-first-party = ["admin_panel", "bot", "messages"]

[tool.ruff.format]
quote-style = "double"
