name: CI Pipeline

on:
  push:
    branches: [main, master, dev]
  pull_request:
    branches: [main, master, dev]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432

      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv (modern pip alternative)
      run: |
        pip install uv

    - name: Install dependencies from pyproject.toml
      run: |
        uv pip install .[dev]  # Устанавливаем основные зависимости + dev опциональные

    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379/0
        SECRET_KEY: test-secret-key-123
        DEBUG: "False"
      run: |
        python -m pytest tests/ -v

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build bot image
      run: |
        docker build -t telegram-bot --target bot .

    - name: Build admin panel image
      run: |
        docker build -t admin-panel --target admin_panel .

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install uv
      run: pip install uv

    - name: Install dev dependencies
      run: uv pip install --system .[dev]

    - name: Run black
      run: black --check .

    - name: Run isort
      run: isort --check-only .

    - name: Run flake8
      run: flake8 .